# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  description: String
  id: Int!
  name: String!
  products: [Product!]
}

input CreateCategoryInput {
  description: String
  name: String!
}

input CreateCustomerInput {
  address: String
  email: String!
  name: String!
  phone: String
}

input CreateOrderInput {
  categoryId: Int
  customerId: Int!
  date: String
  productId: Int!
  quantity: Int!
}

input CreateProductInput {
  categoryId: Int
  description: String
  isActive: Boolean
  name: String!
  price: Float!
  stock: Int
}

input CreateUserInput {
  email: String!
  password: String!
  role: String = "user"
  username: String!
}

type Customer {
  address: String
  email: String!
  id: Int!
  name: String!
  orders: [Order!]
  phone: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponseDto {
  access_token: String!
  id: Int!
  role: String!
  username: String!
}

type Mutation {
  createCategory(input: CreateCategoryInput!): Category!
  createCustomer(input: CreateCustomerInput!): Customer!
  createOrder(input: CreateOrderInput!): Order!
  createProduct(input: CreateProductInput!): Product!
  createUser(input: CreateUserInput!): User!
  deleteCategory(id: Int!): Boolean!
  deleteCustomer(id: Int!): Boolean!
  deleteOrder(id: Int!): Boolean!
  deleteProduct(id: Int!): Boolean!
  deleteUser(id: Int!): Boolean!
  login(password: String!, username: String!): LoginResponseDto!
  updateCategory(input: UpdateCategoryInput!): Category!
  updateCustomer(id: Int!, input: UpdateCustomerInput!): Customer!
  updateOrder(id: Int!, input: UpdateOrderInput!): Order!
  updateProduct(id: Int!, input: UpdateProductInput!): Product!
  updateUser(id: Int!, input: UpdateUserInput!): User!
}

type Order {
  category: Category
  customer: Customer!
  date: String!
  id: Int!
  product: Product!
  quantity: Int!
  totalPrice: Float!
}

type Product {
  category: Category
  categoryId: Int
  description: String
  id: Int!
  isActive: Boolean!
  name: String!
  orders: [Order!]
  price: Float!
  stock: Int!
}

type Query {
  categories: [Category!]!
  category(id: Int!): Category!
  customer(id: Int!): Customer!
  customers: [Customer!]!
  me: LoginResponseDto!
  order(id: Int!): Order!
  orders: [Order!]!
  ordersByCustomer(customerId: Int!): [Order!]!
  product(id: Int!): Product!
  products: [Product!]!
  productsByCategory(categoryId: Int!): [Product!]!
  user(id: Int!): User!
  users: [User!]!
}

input UpdateCategoryInput {
  description: String
  id: Int!
  name: String
}

input UpdateCustomerInput {
  address: String
  email: String
  name: String
  phone: String
}

input UpdateOrderInput {
  categoryId: Int
  customerId: Int
  date: String
  productId: Int
  quantity: Int
}

input UpdateProductInput {
  categoryId: Int
  description: String
  isActive: Boolean
  name: String
  price: Float
  stock: Int
}

input UpdateUserInput {
  email: String
  password: String
  role: String
  username: String
}

type User {
  created_at: DateTime!
  email: String!
  id: Int!
  role: String!
  username: String!
}